generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Next auth

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  caloriesGoal Int         @default(1800)
  username     String?
  bio          String?
  link         String?
  createdAt    DateTime    @default(now())
  foods        UserFood[]
  goals        UserGoals?
  habits       UserHabit[]
}

model UserHabit {
  id         String  @id @default(cuid())
  categoryId String? @default("Default")

  name         String @default("Default")
  repeatSchema String @default("Daily")
  moment       String @default("AllDay")
  doneDays UserHabitDay[]

  createdAt DateTime  @default(now())
  startAt   DateTime  @default(now())
  endsAt    DateTime?

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model UserHabitDay {
  id String @id @default(cuid())

  date String @default("01011970")

  habit   UserHabit @relation(fields: [habitId], references: [id])
  habitId String    @unique
}

model UserGoals {
  id       Int    @id @default(autoincrement())
  calories Int    @default(1800)
  carbs    Int    @default(250)
  fat      Int    @default(60)
  proteins Int    @default(120)
  user     User   @relation(fields: [userId], references: [id])
  userId   String @unique
}

model UserFood {
  id          String   @id @default(cuid())
  userId      String
  name        String?  @default("Default")
  displayType Int      @default(0)
  calories    Int?     @default(0)
  carbs       Int?     @default(0)
  fat         Int?     @default(0)
  proteins    Int?     @default(0)
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
